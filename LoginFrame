import javax.swing.*;
import java.awt.*;
import java.io.*;
import java.util.HashMap;

public class LoginFrame extends JFrame {
    private HashMap<String, String> users = new HashMap<>();
    private JTextField usernameField;
    private JPasswordField passwordField;
    private static final String FILE_NAME = "users.txt";

    public LoginFrame() {
        setTitle("Login Page");
        setSize(350, 220);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new GridLayout(4, 1, 10, 5));
        getContentPane().setBackground(new Color(245, 245, 245));

        loadUsersFromFile();

        // Default admin
        if (!users.containsKey("admin")) {
            users.put("admin", "admin");
            saveUsersToFile();
        }

        JLabel welcomeLabel = new JLabel("Welcome! Please Log In", SwingConstants.CENTER);
        welcomeLabel.setFont(new Font("Segoe UI", Font.BOLD, 16));
        welcomeLabel.setForeground(new Color(0, 150, 136));

        JLabel userLabel = new JLabel("Username:");
        JLabel passLabel = new JLabel("Password:");
        usernameField = new JTextField();
        passwordField = new JPasswordField();

        //  text fields
        usernameField.setBorder(BorderFactory.createLineBorder(new Color(0, 150, 136), 2));
        passwordField.setBorder(BorderFactory.createLineBorder(new Color(0, 150, 136), 2));

        JButton loginButton = new JButton("Login");
        JButton signupButton = new JButton("Sign Up");

        // Button styling
        styleButton(loginButton, new Color(0, 150, 136));
        styleButton(signupButton, new Color(76, 175, 80));

        JPanel formPanel = new JPanel(new GridLayout(2, 2, 5, 5));
        formPanel.setBackground(new Color(245, 245, 245));
        formPanel.add(userLabel);
        formPanel.add(usernameField);
        formPanel.add(passLabel);
        formPanel.add(passwordField);

        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(new Color(245, 245, 245));
        buttonPanel.add(loginButton);
        buttonPanel.add(signupButton);

        add(welcomeLabel);
        add(formPanel);
        add(buttonPanel);

        // Login button
        loginButton.addActionListener(e -> {
            String user = usernameField.getText().trim();
            String pass = new String(passwordField.getPassword());

            if (users.containsKey(user) && users.get(user).equals(pass)) {
                JOptionPane.showMessageDialog(this, "Login Successful!");

                if (user.equals("admin")) {
                    new DashboardAdmin();
                } else {
                    new DashboardUser(user);
                }
                dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Invalid username or password.");
            }
        });

        // Sign Up button
        signupButton.addActionListener(e -> {
            new SignUpPage(users, this);
            setVisible(false);
        });
    }

    private void styleButton(JButton button, Color color) {
        button.setBackground(color);
        button.setForeground(Color.WHITE);
        button.setFocusPainted(false);
        button.setBorderPainted(false);
        button.setOpaque(true);
        button.setCursor(new Cursor(Cursor.HAND_CURSOR));

        button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button.setBackground(color.darker());
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                button.setBackground(color);
            }
        });
    }

    // Load users from file
    private void loadUsersFromFile() {
        try (BufferedReader reader = new BufferedReader(new FileReader(FILE_NAME))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(":");
                if (parts.length == 2) {
                    users.put(parts[0], parts[1]);
                }
            }
        } catch (IOException e) {
            System.out.println("No existing user file found, creating new one...");
        }
    }

    // Save users to file
    private void saveUsersToFile() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(FILE_NAME))) {
            for (String username : users.keySet()) {
                writer.write(username + ":" + users.get(username));
                writer.newLine();
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error saving users.");
        }
    }

    // --- Sign Up Window ---
    class SignUpPage extends JFrame {
        public SignUpPage(HashMap<String, String> users, JFrame loginPage) {
            setTitle("Sign Up");
            setSize(350, 200);
            setLocationRelativeTo(null);
            setLayout(new GridLayout(4, 2, 5, 5));
            getContentPane().setBackground(new Color(245, 245, 245));

            JLabel userLabel = new JLabel("New Username:");
            JLabel passLabel = new JLabel("New Password:");
            JTextField userField = new JTextField();
            JPasswordField passField = new JPasswordField();
            JButton registerButton = new JButton("Register");
            JButton backButton = new JButton("Back");

            userField.setBorder(BorderFactory.createLineBorder(new Color(0, 150, 136), 2));
            passField.setBorder(BorderFactory.createLineBorder(new Color(0, 150, 136), 2));

            styleButton(registerButton, new Color(76, 175, 80));
            styleButton(backButton, new Color(0, 150, 136));

            add(userLabel);
            add(userField);
            add(passLabel);
            add(passField);
            add(backButton);
            add(registerButton);

            registerButton.addActionListener(e -> {
                String newUser = userField.getText().trim();
                String newPass = new String(passField.getPassword());

                if (newUser.isEmpty() || newPass.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Please fill all fields!");
                } else if (users.containsKey(newUser)) {
                    JOptionPane.showMessageDialog(this, "Username already exists!");
                } else {
                    users.put(newUser, newPass);
                    saveUsersToFile();
                    JOptionPane.showMessageDialog(this, "Account created successfully!");
                    dispose();
                    loginPage.setVisible(true);
                }
            });

            backButton.addActionListener(e -> {
                dispose();
                loginPage.setVisible(true);
            });

            setVisible(true);
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new LoginFrame().setVisible(true));
    }
}
